#!/bin/bash

##############################################################################
# Script de configuration automatique du cron job INSEE
# Synchronisation automatique des donn√©es territoriales toutes les 24h
# Module Locali - Configuration Production
##############################################################################

set -e  # Arr√™t en cas d'erreur

# Configuration
PROJECT_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LOG_DIR="/var/log/locali"
CRON_TIME="0 2 * * *"  # 2h du matin tous les jours
SCRIPT_PATH="$PROJECT_PATH/sync-insee-cron.js"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Configuration du syst√®me de mise √† jour automatique INSEE${NC}"
echo "======================================================================"

# V√©rifications pr√©liminaires
echo -e "${YELLOW}üìã V√©rifications pr√©liminaires...${NC}"

# V√©rifier si Node.js est install√©
if ! command -v node &> /dev/null; then
    echo -e "${RED}‚ùå Node.js n'est pas install√©${NC}"
    echo "   Installez Node.js avant de continuer"
    exit 1
fi

NODE_VERSION=$(node --version)
echo -e "${GREEN}‚úÖ Node.js d√©tect√©: $NODE_VERSION${NC}"

# V√©rifier si le script de synchronisation existe
if [ ! -f "$SCRIPT_PATH" ]; then
    echo -e "${RED}‚ùå Script de synchronisation non trouv√©: $SCRIPT_PATH${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Script de synchronisation trouv√©${NC}"

# V√©rifier le fichier .env.local
if [ ! -f "$PROJECT_PATH/.env.local" ]; then
    echo -e "${RED}‚ùå Fichier .env.local manquant${NC}"
    echo "   Cr√©ez le fichier avec les variables d'environnement n√©cessaires"
    exit 1
fi

echo -e "${GREEN}‚úÖ Fichier de configuration trouv√©${NC}"

# Cr√©er le r√©pertoire de logs
echo -e "${YELLOW}üìÅ Cr√©ation du r√©pertoire de logs...${NC}"
sudo mkdir -p "$LOG_DIR"
sudo chown $USER:$USER "$LOG_DIR"
echo -e "${GREEN}‚úÖ R√©pertoire de logs cr√©√©: $LOG_DIR${NC}"

# Rendre le script ex√©cutable
echo -e "${YELLOW}üîß Configuration des permissions...${NC}"
chmod +x "$SCRIPT_PATH"
echo -e "${GREEN}‚úÖ Permissions configur√©es${NC}"

# Cr√©er le wrapper script pour cron
WRAPPER_SCRIPT="$PROJECT_PATH/cron-wrapper.sh"
echo -e "${YELLOW}üìù Cr√©ation du script wrapper...${NC}"

cat > "$WRAPPER_SCRIPT" << EOF
#!/bin/bash
##############################################################################
# Wrapper script pour cron job INSEE
# G√©n√©r√© automatiquement le $(date)
##############################################################################

# Navigation vers le r√©pertoire du projet
cd "$PROJECT_PATH"

# Chargement de l'environnement Node.js (si nvm est utilis√©)
export NVM_DIR="\$HOME/.nvm"
[ -s "\$NVM_DIR/nvm.sh" ] && . "\$NVM_DIR/nvm.sh"
[ -s "\$NVM_DIR/bash_completion" ] && . "\$NVM_DIR/bash_completion"

# Variables d'environnement pour le PATH
export PATH="/usr/local/bin:/usr/bin:/bin:\$PATH"

# Horodatage du d√©but
echo "üöÄ [\$(date '+%Y-%m-%d %H:%M:%S')] D√©but de la synchronisation INSEE"

# Ex√©cution du script avec timeout de 2 heures
timeout 7200 node "$SCRIPT_PATH" 2>&1

EXIT_CODE=\$?

# V√©rification du code de sortie
if [ \$EXIT_CODE -eq 0 ]; then
    echo "‚úÖ [\$(date '+%Y-%m-%d %H:%M:%S')] Synchronisation termin√©e avec succ√®s"
elif [ \$EXIT_CODE -eq 124 ]; then
    echo "‚è∞ [\$(date '+%Y-%m-%d %H:%M:%S')] Synchronisation interrompue (timeout)"
else
    echo "‚ùå [\$(date '+%Y-%m-%d %H:%M:%S')] Synchronisation √©chou√©e (code: \$EXIT_CODE)"
fi

echo "üèÅ [\$(date '+%Y-%m-%d %H:%M:%S')] Fin de la synchronisation"
echo "=========================================="
EOF

chmod +x "$WRAPPER_SCRIPT"
echo -e "${GREEN}‚úÖ Script wrapper cr√©√©: $WRAPPER_SCRIPT${NC}"

# Configuration du cron job
echo -e "${YELLOW}‚è∞ Configuration du cron job...${NC}"

# Sauvegarder l'ancienne crontab
crontab -l > /tmp/crontab_backup_$(date +%Y%m%d_%H%M%S) 2>/dev/null || true

# Supprimer les anciens cron jobs locali (s'ils existent)
(crontab -l 2>/dev/null | grep -v "locali\|insee\|sync-insee" || true) | crontab - 2>/dev/null || true

# Ajouter le nouveau cron job
(crontab -l 2>/dev/null; echo "$CRON_TIME $WRAPPER_SCRIPT >> $LOG_DIR/insee-sync.log 2>&1 # Locali INSEE Auto Sync") | crontab -

echo -e "${GREEN}‚úÖ Cron job configur√©: $CRON_TIME${NC}"

# Cr√©er un script de monitoring
MONITOR_SCRIPT="$PROJECT_PATH/monitor-sync.sh"
echo -e "${YELLOW}üìä Cr√©ation du script de monitoring...${NC}"

cat > "$MONITOR_SCRIPT" << EOF
#!/bin/bash
##############################################################################
# Script de monitoring des synchronisations INSEE
# Affiche les logs et statistiques de synchronisation
##############################################################################

LOG_FILE="$LOG_DIR/insee-sync.log"

echo "üìä Monitoring Synchronisation INSEE - Locali"
echo "=============================================="

if [ ! -f "\$LOG_FILE" ]; then
    echo "‚ùå Aucun log de synchronisation trouv√©"
    echo "   Fichier attendu: \$LOG_FILE"
    exit 1
fi

echo "üìÅ Fichier de log: \$LOG_FILE"
echo "üìè Taille du fichier: \$(du -h "\$LOG_FILE" | cut -f1)"
echo ""

echo "üïê Derni√®res ex√©cutions:"
echo "------------------------"
grep -E "D√©but de la synchronisation|termin√©e avec succ√®s|√©chou√©e|interrompue" "\$LOG_FILE" | tail -10

echo ""
echo "üìà Statistiques:"
echo "----------------"
echo "Total ex√©cutions: \$(grep -c "D√©but de la synchronisation" "\$LOG_FILE" 2>/dev/null || echo "0")"
echo "Succ√®s: \$(grep -c "termin√©e avec succ√®s" "\$LOG_FILE" 2>/dev/null || echo "0")"
echo "√âchecs: \$(grep -c "√©chou√©e" "\$LOG_FILE" 2>/dev/null || echo "0")"
echo "Timeouts: \$(grep -c "interrompue" "\$LOG_FILE" 2>/dev/null || echo "0")"

echo ""
echo "üîç Derni√®res erreurs (s'il y en a):"
echo "-----------------------------------"
grep -i "error\|erreur\|√©chec\|failed" "\$LOG_FILE" | tail -5 || echo "Aucune erreur r√©cente"

echo ""
echo "‚è∞ Prochaine ex√©cution pr√©vue:"
echo "------------------------------"
crontab -l | grep "Locali INSEE Auto Sync" | cut -d' ' -f1-5 || echo "Cron job non trouv√©"
EOF

chmod +x "$MONITOR_SCRIPT"
echo -e "${GREEN}‚úÖ Script de monitoring cr√©√©: $MONITOR_SCRIPT${NC}"

# Test de la configuration
echo -e "${YELLOW}üß™ Test de la configuration...${NC}"

# Test du script (dry run)
echo "Ex√©cution d'un test (sans synchronisation r√©elle)..."
if timeout 30 node -e "
    console.log('‚úÖ Node.js fonctionne');
    console.log('‚úÖ Projet path:', process.cwd());
    console.log('‚úÖ Variables env charg√©es');
" 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Test de configuration r√©ussi${NC}"
else
    echo -e "${RED}‚ùå Test de configuration √©chou√©${NC}"
fi

# R√©sum√© final
echo ""
echo -e "${BLUE}üéâ Configuration termin√©e avec succ√®s !${NC}"
echo "======================================================================"
echo -e "${GREEN}üìã R√©sum√© de la configuration:${NC}"
echo "   ‚Ä¢ Synchronisation: $CRON_TIME (2h du matin tous les jours)"
echo "   ‚Ä¢ Script: $SCRIPT_PATH"
echo "   ‚Ä¢ Wrapper: $WRAPPER_SCRIPT"
echo "   ‚Ä¢ Logs: $LOG_DIR/insee-sync.log"
echo "   ‚Ä¢ Monitoring: $MONITOR_SCRIPT"
echo ""
echo -e "${YELLOW}üìù Commandes utiles:${NC}"
echo "   ‚Ä¢ Voir les logs: tail -f $LOG_DIR/insee-sync.log"
echo "   ‚Ä¢ Monitoring: $MONITOR_SCRIPT"
echo "   ‚Ä¢ Test manuel: $WRAPPER_SCRIPT"
echo "   ‚Ä¢ Voir crontab: crontab -l"
echo ""
echo -e "${BLUE}üöÄ La synchronisation automatique est maintenant active !${NC}"
echo "   Prochaine ex√©cution: demain √† 2h du matin"
echo ""

# Optionnel: proposer un test imm√©diat
read -p "Voulez-vous ex√©cuter un test de synchronisation maintenant ? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üîÑ Ex√©cution d'un test de synchronisation...${NC}"
    echo "Cela peut prendre quelques minutes..."
    
    if $WRAPPER_SCRIPT; then
        echo -e "${GREEN}‚úÖ Test de synchronisation r√©ussi !${NC}"
    else
        echo -e "${RED}‚ùå Test de synchronisation √©chou√©${NC}"
        echo "V√©rifiez les logs pour plus de d√©tails"
    fi
fi

echo -e "${GREEN}‚ú® Configuration termin√©e !${NC}" 